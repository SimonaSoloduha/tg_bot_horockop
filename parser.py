import re
import requests
from bs4 import BeautifulSoup


def remove_last_sentence(paragraph):
    """
    –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
    :param paragraph: str, –ø–∞—Ä–∞–≥—Ä–∞—Ñ, –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–µ –ø–µ—Ä–¥–ª–æ–∂–µ–Ω–∏–µ
    :return: str, –Ω–æ–≤—ã–π –ø–∞—Ä–∞–≥—Ä–∞—Ñ
    """
    sentence_pattern = r'[^.!?]+[.!?]'
    sentences = re.findall(sentence_pattern, paragraph)

    if len(sentences) > 1:
        updated_paragraph = ' '.join(sentences[:-1])
        return updated_paragraph
    else:
        return ""


def get_content(url):
    """
    –§—É–Ω–∫—Ü–∏—è –∑–∞–±–∏—Ä–∞–µ—Ç —Å —Å–∞–π—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å –ø–æ–º–æ—â—å—é BeautifulSoup
    :param url: str
    :return: –æ–±—ä–µ–∫—Ç BeautifulSoup
    """
    response = requests.get(url)
    soup = BeautifulSoup(response.text, "html.parser")
    content = soup.findAll('article', id='maincontent')[0]
    content = content.get_text()
    content = re.sub("^\s+|\n\n|\t\t|\r\r|\s+$", '', content)
    return content


def parse_horoscope_for_zodiac(zodiac, day):
    """
    –ü–∞—Ä—Å–µ—Ä –¥–ª—è –≥–æ—Ä–æ—Å–∫–æ–ø–∞ –Ω–∞ 1 –¥–µ–Ω—å –¥–ª—è 1 –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞
    :param zodiac: str
    :param day: str
    :return: str
    """
    url = f'https://uznayvse.ru/goroskop/{zodiac}-all-{day}.html'
    content = get_content(url)
    content = remove_last_sentence(content)
    content = content.replace('–ú—É–∂—á–∏–Ω–∞', '–ú—É–∂—á–∏–Ω–∞ üê¥')
    content = content.replace('–ñ–µ–Ω—â–∏–Ω–∞', '–ñ–µ–Ω—â–∏–Ω–∞ ü¶Ñ')
    return content


def parse_horoscope_for_all(day):
    """
    –ü–∞—Ä—Å–µ—Ä –¥–ª—è –≥–æ—Ä–æ—Å–∫–æ–ø–∞ –Ω–∞ 1 –¥–µ–Ω—å –¥–ª—è –≤—Å–µ—Ö –∑–Ω–∞–∫–æ–≤
    :param day: str
    :return: str
    """
    url = f'https://uznayvse.ru/goroskop/all-{day}.html'
    content = get_content(url)
    content = content.split('–ü–æ–¥—Ä–æ–±–Ω–µ–µ')
    content_text = ''

    for i in content:
        updated_paragraph = remove_last_sentence(i)
        updated_paragraph = updated_paragraph.replace('–≥–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ —Å–µ–≥–æ–¥–Ω—è', '\t\n')
        if updated_paragraph:
            content_text += f'\t\nüîÆ{updated_paragraph}\t\n'
    return content_text


def parse_horoscope_compatibility(he, she):
    """
    –ü–∞—Ä—Å–µ—Ä –¥–ª—è –≥–æ—Ä–æ—Å–∫–æ–ø–∞ –Ω–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –∑–Ω–∞–∫–æ–≤
    :param he: str
    :param she: str
    :return: list
    """
    url = f'https://uznayvse.ru/goroskop/zhenshina-{she}-muzhchina-{he}-sovmestimost-znaka-zodiaka.html'
    response = requests.get(url)
    soup = BeautifulSoup(response.text, "html.parser")
    content = soup.findAll('div', class_='maincontent')[0]
    title_1 = '–ö–∞–∫ –∂–µ–Ω—â–∏–Ω–µ-'
    title_2 = '–ö–∞–∫ –º—É–∂—á–∏–Ω–µ-'
    result_content = []
    for data in content:
        data_g = re.sub("^\s+|\n|\r|\s+$", '', data.get_text())
        if len(result_content) < 12:
            if len(data_g) != 0:
                if data_g.startswith(title_1) or data_g.startswith(title_2):
                    result_content.append(f'\n–¢–∞–∫ —á—Ç–æ –∏–º–µ–π —ç—Ç–æ –≤–≤–∏–¥—É üßê\n')
                    break
                else:
                    result_content.append(f'\n{data_g}\n')
        else:
            result_content.append(f'\n–¢–∞–∫ —á—Ç–æ –∏–º–µ–π —ç—Ç–æ –≤–≤–∏–¥—É üßê\n')
            break
    return result_content
